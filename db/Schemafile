create_table :categories, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :name, null: false

  t.timestamps null: true
end

create_table :category_classifies, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :category_id, null: false
  t.integer  :classify_id, null: false

  t.timestamps null: true
end

create_table :classifies, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.string   :name,    null: false, default: ""
  t.string   :name_en, null: false, default: ""

  t.timestamps null: true
end

create_table :sites, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :category_id,  null: false
  t.string   :root_url,     null: false, default: ""
  t.string   :crawling_url, null: false, default: ""
  t.string   :site_name,    null: false, default: ""

  t.timestamps null: true
end

create_table :sharings, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :site_id, null: false
  t.string   :name,    null: false
  t.integer  :state,   null: false, default: 0
  t.text     :link

  t.timestamps null: true
end

create_table :sharing_elements, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :sharing_id,  null: false
  t.integer  :classify_id, null: false
  t.text     :value,       null: false

  t.timestamps null: true
end

create_table :delayed_jobs, force: true, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4" do |t|
  t.integer  :priority, default: 0, null: false  # Allows some jobs to jump to the front of the queue
  t.integer  :attempts, default: 0, null: false  # Provides for retries, but still fail eventually.
  t.text     :handler,              null: false  # YAML-encoded string of the object that will do work
  t.text     :last_error                         # reason for last failure (See Note below)
  t.datetime :run_at                             # When to run. Could be Time.zone.now for immediately, or sometime in the future.
  t.datetime :locked_at                          # Set when a client is working on this object
  t.datetime :failed_at                          # Set when all retries have failed (actually, by default, the record is deleted instead)
  t.string   :locked_by                          # Who is working on this object (if locked)
  t.string   :queue                              # The name of the queue this job is in

  t.timestamps null: true
end
